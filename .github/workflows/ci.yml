name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-skcc-calculator:
    name: Test SKCC Calculator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install httpx beautifulsoup4 pytest
          
      - name: Test core imports
        run: |
          cd backend/app
          python -c "
          import sys, os
          print('Testing core SKCC module imports...')
          
          try:
              from services.skcc import parse_adif, calculate_awards, fetch_roster_live
              print('✓ Core SKCC functions import successfully')
          except ImportError as e:
              print(f'✗ Import error: {e}')
              sys.exit(1)
          
          try:
              from services.skcc import Member, QSO, AwardCheckResult
              print('✓ SKCC data classes import successfully')
          except ImportError as e:
              print(f'✗ Data class import error: {e}')
              sys.exit(1)
              
          print('All core imports successful!')
          "
          
      - name: Test ADIF parsing (basic)
        run: |
          cd backend/app
          python -c "
          from services.skcc import parse_adif
          
          # Test basic ADIF parsing with simple data
          test_adif = '''
          ADIF Log for Test
          <PROGRAMID:10>TestLogger
          <EOH>
          <CALL:6>W1TEST <QSO_DATE:8>20250101 <BAND:3>20M <MODE:2>CW <SKCC:3>123 <EOR>
          <CALL:6>W2TEST <QSO_DATE:8>20250102 <BAND:3>40M <MODE:2>CW <SKCC:4>456C <EOR>
          '''
          
          qsos = parse_adif(test_adif)
          assert len(qsos) == 2, f'Expected 2 QSOs, got {len(qsos)}'
          assert qsos[0].call == 'W1TEST', f'Expected W1TEST, got {qsos[0].call}'
          assert qsos[1].skcc == '456C', f'Expected 456C, got {qsos[1].skcc}'
          
          print('✓ ADIF parsing test passed')
          "
          
      - name: Test award calculation (basic)
        run: |
          cd backend/app
          python -c "
          from services.skcc import calculate_awards, Member, QSO
          
          # Create test data
          members = [
              Member(call='W1TEST', number=123),
              Member(call='W2TEST', number=456, suffix='C'),
              Member(call='W3TEST', number=789, suffix='T')
          ]
          
          qsos = [
              QSO(call='W1TEST', date='20250101', skcc='123'),
              QSO(call='W2TEST', date='20250102', skcc='456C'),
              QSO(call='W3TEST', date='20250103', skcc='789T')
          ]
          
          # Test calculation
          result = calculate_awards(qsos, members)
          
          assert result.unique_members_worked == 3, f'Expected 3 unique members, got {result.unique_members_worked}'
          assert len(result.awards) > 0, 'Expected some awards to be calculated'
          
          print(f'✓ Award calculation test passed - {result.unique_members_worked} unique members')
          "
          
      - name: Validate project structure
        run: |
          echo "Checking project structure..."
          ls -la
          echo "Backend structure:"
          ls -la backend/
          echo "Scripts structure:"
          ls -la scripts/
          echo "✓ Project structure validated"

